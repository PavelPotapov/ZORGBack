# Generated by Django 5.0.1 on 2024-02-04 08:32

import django.db.models.deletion
import wagtail.blocks
import wagtail.embeds.blocks
import wagtail.fields
import wagtail.images.blocks
import wagtailvideos.blocks
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0089_log_entry_data_json_null_to_object'),
        ('wagtailimages', '0025_alter_image_file_alter_rendition_file'),
    ]

    operations = [
        migrations.CreateModel(
            name='LaptopMenu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title_main', models.CharField(blank=True, max_length=100, null=True, verbose_name='Заголовок главной ссылки')),
                ('link_main', models.CharField(blank=True, max_length=100, null=True, verbose_name='Ссылка на главную')),
                ('title_portfolio', models.CharField(blank=True, max_length=100, null=True, verbose_name='Заголовок 2 ссылки')),
                ('link_protfolio', models.CharField(blank=True, max_length=100, null=True, verbose_name='2 Ссылка')),
                ('title_work', models.CharField(blank=True, max_length=100, null=True, verbose_name='Заголовок 3 ссылки')),
                ('link_work', models.CharField(blank=True, max_length=100, null=True, verbose_name='3 Ссылка')),
                ('title_facility', models.CharField(blank=True, max_length=100, null=True, verbose_name='Заголовок 4 ссылки')),
                ('link_facility', models.CharField(blank=True, max_length=100, null=True, verbose_name='4 Ссылка')),
                ('title_contact', models.CharField(blank=True, max_length=100, null=True, verbose_name='Заголовок 5 ссылки')),
                ('link_contact', models.CharField(blank=True, max_length=100, null=True, verbose_name='5 Ссылка')),
                ('telephone', models.CharField(blank=True, max_length=100, null=True, verbose_name='Телефон')),
                ('telephone_link', models.CharField(blank=True, max_length=100, null=True, verbose_name='Телефон ссылка формата tel:79028607651')),
                ('mail', models.CharField(blank=True, max_length=100, null=True, verbose_name='email')),
                ('mail_link', models.CharField(blank=True, max_length=100, null=True, verbose_name='email ссылка формата mailto:m.zhvikovm@gmail.com')),
            ],
            options={
                'verbose_name': 'Боковое меню',
                'verbose_name_plural': 'Боковые меню',
            },
        ),
        migrations.CreateModel(
            name='Footer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year_text', models.CharField(blank=True, max_length=100, null=True, verbose_name='Года работы компании в футере')),
                ('policy_text', models.CharField(blank=True, max_length=100, null=True, verbose_name='Политика конфиденциальности текст')),
                ('policy_link', models.CharField(blank=True, max_length=100, null=True, verbose_name='Ссылка на политику конфиденциальности')),
                ('conditions_text', models.CharField(blank=True, max_length=100, null=True, verbose_name='Условия оказания услуг текст')),
                ('conditions_link', models.CharField(blank=True, max_length=100, null=True, verbose_name='Ссылка на условия')),
                ('text_footer_bottom', models.CharField(blank=True, max_length=100, null=True, verbose_name='Текст про политику конфиденциальности внизу футера')),
                ('accept_text', models.CharField(blank=True, max_length=100, null=True, verbose_name='Текст принятия политики')),
                ('tel_text', models.CharField(blank=True, max_length=100, null=True, verbose_name='Текст телефон')),
                ('link_tel_text', models.CharField(blank=True, max_length=100, null=True, verbose_name='Cсылка на телефон, формат: tel:+79028607651')),
                ('mail_text', models.CharField(blank=True, max_length=100, null=True, verbose_name='Текст email')),
                ('mail_link', models.CharField(blank=True, max_length=100, null=True, verbose_name='Cсылка на  email, форма: mailto:m.zhvikovm@gmail.com')),
                ('image_carrier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Картинка в футере слева')),
            ],
            options={
                'verbose_name': 'Футер',
                'verbose_name_plural': 'Футеры',
            },
        ),
        migrations.CreateModel(
            name='Header',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title_main', models.CharField(blank=True, max_length=100, null=True, verbose_name='Заголовок главной ссылки')),
                ('link_main', models.CharField(blank=True, max_length=100, null=True, verbose_name='Ссылка на главную')),
                ('title_portfolio', models.CharField(blank=True, max_length=100, null=True, verbose_name='Заголовок 2 ссылки')),
                ('link_portfolio', models.CharField(blank=True, max_length=100, null=True, verbose_name='2 Ссылка')),
                ('title_work', models.CharField(blank=True, max_length=100, null=True, verbose_name='Заголовок 3 ссылки')),
                ('link_work', models.CharField(blank=True, max_length=100, null=True, verbose_name='3 Ссылка')),
                ('title_facility', models.CharField(blank=True, max_length=100, null=True, verbose_name='Заголовок 4 ссылки')),
                ('link_facility', models.CharField(blank=True, max_length=100, null=True, verbose_name='4 Ссылка')),
                ('title_contact', models.CharField(blank=True, max_length=100, null=True, verbose_name='Заголовок 5 ссылки')),
                ('link_contact', models.CharField(blank=True, max_length=100, null=True, verbose_name='5 Ссылка')),
                ('image_carrier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Картинка логотипа в хедере')),
            ],
            options={
                'verbose_name': 'Хедер',
                'verbose_name_plural': 'Хедеры',
            },
        ),
        migrations.CreateModel(
            name='HomePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('subtitle', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Подзаголовок')),
                ('intro_title', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Заголовок. Блок после слайдера')),
                ('intro_subtitle', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Текст/Контент подзаголовка')),
                ('intro_about_us', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Заголовок')),
                ('intro_about_us_subtitle', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Текст/Контент подзаголовка')),
                ('our_projects_title', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Заголовок. Наши проекты')),
                ('browl_royale_text1', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Текст в блоке Browl Royale 1')),
                ('browl_royale_text2', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Текст в блоке Browl Royale 2')),
                ('browl_royale_text3', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Текст в блоке Browl Royale 3')),
                ('service_title', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Заголовок. Услуги')),
                ('work_title', models.CharField(blank=True, max_length=100, null=True, verbose_name='Заголовок карьера')),
                ('work_message', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Текст перед блоками с работой')),
                ('body_service', wagtail.fields.StreamField([('service_section', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(blank=True, label='Заголовок блока', null=True)), ('profile_title_first', wagtail.blocks.CharBlock(blank=True, label='Заголовок. Первое слово профиля', null=True)), ('profile_title_second', wagtail.blocks.CharBlock(blank=True, label='Заголовок. Второе слово профиля (зеленый текст)', null=True)), ('profile_message', wagtail.blocks.CharBlock(blank=True, label='Подзаголовок. Описание ', max_length=1000, null=True)), ('image', wagtail.images.blocks.ImageChooserBlock(label='Картинка для сервис блока', required=False)), ('partners', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('link', wagtail.blocks.CharBlock(blank=True, label='Ссылка на партнера', null=True)), ('image', wagtail.images.blocks.ImageChooserBlock(label='Картинка для партнера', required=False))]), label='Список партнеров', max_num=6, min_num=1)), ('title_under_partners', wagtail.blocks.CharBlock(blank=True, label='Зеленая подпись под партнерами ', max_length=100, null=True))], blank=True, verbose_name='Блоки c картинками партнеров на главной странице'))], blank=True, use_json_field=True, verbose_name='Блок услуг на главной')),
                ('body_work', wagtail.fields.StreamField([('work_card', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(blank=True, label='Заголовок должности в модальном окне', null=True)), ('date', wagtail.blocks.CharBlock(blank=True, label='Дата', null=True)), ('short_title', wagtail.blocks.CharBlock(blank=True, label='Название должности в карточке', null=True)), ('type_work', wagtail.blocks.CharBlock(blank=True, label='Тип работы (Удаленно / и другие)', null=True)), ('message', wagtail.blocks.CharBlock(blank=True, label='Описание работы ', max_length=1000, null=True)), ('requirements', wagtail.blocks.ListBlock(wagtail.blocks.CharBlock(), label='Список требований'))], blank=True, verbose_name='Блоки с карточкой работы на главной странице'))], blank=True, use_json_field=True, verbose_name='Блок настройки карточек с работой')),
                ('body_gallery', wagtail.fields.StreamField([('gallery_card', wagtail.blocks.StructBlock([('video_gallery', wagtailvideos.blocks.VideoChooserBlock(label='Видеофайл для блока свайпера', required=False)), ('image_gallery', wagtail.images.blocks.ImageChooserBlock(label='Картинка для блока свайпера', required=False)), ('video_url', wagtail.embeds.blocks.EmbedBlock(label='URL видео', required=False))], blank=True, label='Блоки картинок / видео на главной странице свайпера', null=True))], blank=True, use_json_field=True, verbose_name='Блок настройки картинок / видео для свайпера')),
                ('image_about_us', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Картинка для первого блока О НАС')),
                ('image_carrier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Картинка в конце страницы. Где форма обратной связи')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
    ]
